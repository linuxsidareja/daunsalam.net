<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<title>yanmarshus bachtiar :: Analogi Pembuatan Perangkat Lunak</title>
<link type="text/css" rel="stylesheet" href="../artikel.css">
</head>
<body>

<div class="logo"><a href="../index.htm" class="linklogo"><b>daunsalam</b>.net</a></div>
<div class="lisensi">
Artikel ini dapat digunakan, disalin, dan disebarluaskan.
Cukup cantumkan sumber asli.
Jika isinya mengandung kebenaran, semoga memberi kebaikan bagi kita yang memanfaatkannya.
Jika ada yang salah, mohon kiranya penulis dimaafkan.
Dan sangat baik, jika kesalahan tersebut dapat diberitahukan kepada penulis.<br>
Yanmarshus, 22 Maret 2009, yan[at]daunsalam[dot]net
</div>

<!-- isi mulai -->

<h2>Analogi Pembuatan Perangkat Lunak</h2>

<p>
Perangkat lunak atau program atau software mempunyai bentuk yang unik. Dalam sebuah situasi dimana diperlukan analogi untuk perangkat lunak, ternyata cukup sulit untuk mendapatkan analogi yang memuaskan. Analogi ini bisa jadi untuk perangkat lunak itu sendiri, atau bisa juga proses dalam pembuatan perangkat lunak, atau sesuatu hal lain yang berkaitan dengan perangkat lunak.
</p>

<p>
Pertama saya membuat sebuah ilustrasi seseorang yang melakukan pekerjaan membuat sebuah perangkat lunak. Disini bukan perusahaan, tetapi satu orang dalam artian yang sesungguhnya. Perangkat lunak dibuat atas keinginan sendiri, tanpa ada campur tangan pihak lain. Semua proses dilakukan sendiri oleh orang yang saya sebut saja sebagai programer. Proses ini dimulai dari nol, sampai menjadi sebuah perangkat lunak yang bisa digunakan. Untuk contohnya, perangkat lunak yang dihasilkan adalah sebuah program kalkulator.
</p>

<p>
Apa yang perlu dimiliki si programer untuk menghasilkan program kalkulator tersebut ?
</p>

<ul>
<li>Kemampuan/keahlian membuat program kalkulator</li>
<li>Sebuah komputer yang bisa digunakan untuk membuat program kalkulator</li>
<li>Waktu, tenaga, dan fikiran yang dipakai selama membuat program kalkulator</li>
</ul>

<p>
Prosesnya dalam bentuk yang sederhana adalah sebagai berikut :
</p>

<ul>
<li>Hari pertama si programer membuat sebuah desain program kalkulator</li>
<li>Hari kedua si programer menulis kode program kalkulator</li>
<li>Hari ketiga si programer menguji program kalkulator</li>
<li>Hari keempat si programer melakukan perbaikan terhadap program kalkulator</li>
<li>Hari kelima si programer melakukan sentuhan akhir untuk program kalkulator</li>
<li>Hari keenam program kalkulator selesai dan bisa digunakan</li>
</ul>

<p>
Setelah program kalkulator ini selesai, dalam teknologi komputer, program ini cukup mudah untuk diduplikasi. Untuk menghasilkan program kalkulator yang sama, tidak lagi memerlukan proses selama enam hari yang dijalani oleh si programer. Bisa jadi hanya beberapa menit saja, sudah bisa diduplikasi menjadi sekian banyak program kalkulator yang persis sama.
</p>

<p>
Demikian sebuah ilustrasi sederhana proses menghasilkan sebuah perangkat lunak. Tentu sesuai judul tulisan ini, proses apakah yang memiliki kemiripan dengan cerita di atas? Langkah dalam menghasilkan produk/barang lain, bisa jadi banyak yang sama dengan yang dilakukan oleh si programer. Yaitu memulai dengan desain/perencanaan, bekerja membuat barang sesuai desain, melakukan pengujian, kemudian diperbaiki jika ada yang kurang pas, dan setelah itu jadilah produk/barang tersebut. Hanya saja, setelah barang pertama jadi, untuk menghasilkan barang berikutnya kemungkinan besar langkah yang dikerjakan juga mengulang lagi langkah untuk menghasilkan barang yang pertama. Yang tidak dilakukan hanyalah langkah desain, karena menggunakan desain yang sama.
</p>

<p>
Dari ilustrasi di atas, terlihat bahwa menggunakan proses membuat sebuah produk yang berupa barang sebagai analogi untuk membuat perangkat lunak, tentu saja menjadi tidak tepat. Untuk membuat sebuah barang, untuk setiap barang berikutnya yang dihasilkan diperlukan bahan baku lagi, diperlukan sejumlah usaha dan waktu lagi, seperti ketika menghasilkan barang yang pertama. Hal ini tak terjadi dalam pembuatan perangkat lunak.
</p>

<p>
Sekarang dibuat ilustrasi seorang yang menghasilkan meja, yang saya sebut seorang tukang kayu. Untuk membuat sebuah meja, maka dilalui langkah-langkah seperti di atas, mulai dari desain sampai sebuah meja selesai dibuat. Untuk menghasilkan meja kedua yang sama dengan meja pertama, si tukang kayu memerlukan bahan serta tenaga dan waktu yang sama dengan ketika membuat meja pertama.
Coba bandingkan dengan membuat perangkat lunak. Perangkat lunak dapat digandakan dengan lebih murah dan mudah. Sedangkan meja tidaklah demikian.
</p>

<p>
Analogi untuk pembuatan perangkat lunak yang cukup mendekati adalah proses pembuatan lagu. Seseorang yang membuat lagu akan melakukan langkah yang sama seperti di atas juga. Setelah lagu tersebut selesai dan disimpan dalam media penyimpan lagu, maka lagu ini bisa diduplikat. </p>

<p>
<tt>
Tulisan ini seharusnya berlanjut ke masalah free software, dan tentang harga untuk sebuah perangkat lunak. Untuk sementara pembaca yang budiman saja yang melanjutkannya sendiri :-)
</tt>
</p>

<!-- isi selesai -->

</body>
</html>
