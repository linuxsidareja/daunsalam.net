<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<title>yanmarshus bachtiar :: Saya Tidak Gila</title>
<link type="text/css" rel="stylesheet" href="../artikel.css">
</head>
<body>

<div class="logo"><a href="../index.htm" class="linklogo"><b>daunsalam</b>.net</a></div>
<div class="lisensi">
Artikel ini dapat digunakan, disalin, dan disebarluaskan.
Cukup cantumkan sumber asli.
Jika isinya mengandung kebenaran, semoga memberi kebaikan bagi kita yang memanfaatkannya.
Jika ada yang salah, mohon kiranya penulis dimaafkan.
Dan sangat baik, jika kesalahan tersebut dapat diberitahukan kepada penulis.<br>
Yanmarshus, 21 Juli 2008, yan[at]daunsalam[dot]net
</div>

<!-- isi mulai -->

<h2>Saya Tidak Gila</h2>

<p>Ini sebuah cerita.</p>

<p>
Kang, saya mau mebuat sebuah program.<br>
Demikian dimulai bincang2 di pinggir gang itu.<br>
Lho, program apa? Untuk apa?
</p>

<p>
Demikian awalnya. Sederhananya, ketika membuat sebuah program,
tentu ada asal usul mengapa membuat sebuah program.
Mari saya buat menjadi sederhana cerita di atas.
Saya mau membuat program yang menampilkan kalimat<br>
"Saya tidak gila".<br>
Itu saja.
</p>

<p>
Aha, jelas sekarang. Permintaannya cukup jelas dan mudah,
sehingga memang tidak membuat si Akang gila beneran.
Untuk membuat sebuah program pada komputer,
menggunakan "bahasa pemrograman" tertentu.
Ada banyak sekali bahasa pemrograman.
Untuk contohnya : C, Pascal, Basic, Python, Perl, C++, Ruby, PHP, Java, Fortran,...
Banyak sekali. Kalau mau tahu lebih banyak, lihat di wikipedia,
alamat berikut bisa dikunjungi :<br>
http://en.wikipedia.org/wiki/Alphabetical_list_of_programming_languages<br>
http://en.wikipedia.org/wiki/Timeline_of_programming_languages<br>
http://en.wikipedia.org/wiki/List_of_programming_languages_by_category
</p>

<p>
Setelah melihat halaman wikipedia di atas, ada kemungkinan hidup kelihatan
lebih susah, karena daftarnya sangat panjang.
Saya cuma mau menampilkan "Saya tidak gila" saja kok disuguhi
daftar bahasa pemrograman yang demikian banyak. Ah, ribet.
</p>

<p>
Ha?, kalau begitu mari kita lupakan daftar di atas.
Pilih saja satu, yaitu bahasa C.
Mengapa bahasa C? Ya udah, pokoknya ikut sajalah. :-)
Atau salah satu jawabannya, di Linux banyak program dibuat dengan bahasa C.
</p>

<p>
Baiklah, mari kita mulai.
Jalankan satu program teks editor yang mudah digunakan.
Bisa vi kan? Itu lagi! Itu susah.
Ya pilih yang lain, misalnya gedit.
Tulis program seperti di bawah ini.
</p>

<pre>
void main() {
  printf("Saya tidak gila");
}
</pre>

<p>
Setelah itu simpan dengan nama : saya.c<br>
Sebaiknya simpan dalam sebuah direktori yang dipersiapkan
untuk program luar biasa ini.
Setelah disimpan, gunakan konsol/xterm,
lalu masuk ke direktori dimana file saya.c tadi disimpan.
Misalnya di direktori /home/ujang/coba
</p>

<p>
Setelah berada dalam direktori tersebut,
jalankan command sebagai berikut :
</p>

<pre>
gcc saya.c
</pre>

<p>
Abaikan saja apa yang tampil di layar, selama tidak ada
kata-kata yang menyebut ERROR.
Setelah itu coba lihat isi direktori dengan perintah ls.
Maka sekarang akan ada sebuah file baru dengan nama : a.out
</p>

<p>
Langkah terakhir, jalankan perintah berikut :
</p>

<pre>
./a.out
</pre>

<p>
Jika tidak ada yang salah, maka di layar akan tampil tulisan<br>
Saya tidak gila.<br>
Berhasil!
</p>

<p>
Sekarang kembali ke atas.
File saya.c adalah file teks biasa yang di dalamnya berupa program
yang ditulis dengan bahasa C.
File saya.c belum bisa dijalankan, karena hanya sebuah file teks biasa.
Agar program yang ditulis tersebut menjadi program,
maka ada proses yang disebut dengan kompilasi.
Proses kompilasi memproses file saya.c menjadi sebuah file yg sudah bisa dijalankan.
Pada proses di atas, kompilasi saya.c dilakukan oleh program gcc.
Karena gcc melakukan kompilasi, maka gcc biasa juga disebut dengan "compiler".
</p>

<p>
perintah : gcc saya.c menghasilkan file a.out<br>
File a.out adalah program yang sudah bisa dijalankan.
Dan terakhir, perintah ./a.out adalah perintah untuk menjalankan
program a.out itu sendiri, yang kemudian menampilkan tulisan
Saya tidak gila.
</p>

<p>
Jelas kan? Kalau belum, baca lagi dari atas.
Begitu terus diulang sampai jelas. :-D
</p>

<p>
Selanjutnya, cari dokumen/buku/manual di internet yang berisi semua
ketentuan bagaimana menulis program dalam bahasa C.
Baca sampai paham semuanya, maka program apapun bisa dibuat dengan bahasa C.
Demikian kejadiannya jika di alam mimpi.
</p>

<p>
Bolehkan saya menggunakan bahasa yang lain?
Ya boleh saja kok. Belum ada larangan untuk menggunakan sebuah bahasa,
sampai larangannya betul-betul dibuat.
Terus caranya bagaimana? Ya sama dengan cara di atas.
Tulis programnya, lakukan kompilasi, lalu jadilah program.
Misalnya sekarang pakai bahasa Pascal, tulis programnya dengan teks editor,
lalu kompilasi, maka jadilah program.
Kalau program dengan bahasa C dikompilasi dengan gcc,
maka pascal dikompilasi dengan freepascal.
Kalau belum ada freepascal dalam komputer, ya instal dululah.<br>
/* Masak duludong, Mulan aja jamilah, masak jamidong... Gariiing */
</p>

<p>
Dalam dua contoh di atas, selalu ada proses kompilasi,
apakah tidak ada yang selesai ditulis programnya langsung dijalankan saja.
Ada.
Sama dengan cara sebelumnya, gunakan teks editor,
lalu tulis seperti berikut ini.
</p>

<pre>
print "Saya benar-benar tidak gila";
</pre>

<p>
Lalu simpan di direktori yang disiapkan tadi dengan nama : lagi.pl<br>
Masuk ke direktori tersebut melalui konsol/xterm, jalankan perintah berikut :
</p>

<pre>
perl lagi.pl
</pre>

<p>
Selama tidak ada yang aneh2, mudah-mudahan di layar akan tampil
Saya benar-benar tidak gila
</p>

<p>
Nah, disini tidak ada proses kompilasi. Setelah program ditulis,
bisa dijalankan langsung. Hanya saja tidak seperti sebelumnya,
menjalankan program ini memerlukan cara yang agak berbeda,
yaitu dengan perintah : perl lagi.pl
</p>

<p>
Kira2 begini maksudnya.
Untuk menjalankan program yang ditulis dalam file lagi.pl,
dilakukan oleh : perl<br>
Jadi perl yang membaca isi file lagi.pl, kemudian si perl
ini yang melakukan proses yang ada dalam file lagi.pl
Cara seperti ini disebut dengan interpretasi.
Jadi perl adalah "interpreter", karena dialah yang melakukan interpretasi,
kemudian menjalankan apa proses yang ada dalam file lagi.pl
Program yang ditulis dalam file lagi.pl tentu dalam bahasa
yang dimengerti oleh interpreternya, yaitu Perl.
Contoh interpreter selain Perl adalah : Python, Ruby, Php, Pike.
</p>

<p>
Apakah masih ada model lain lagi?
Ada, yaitu seperti yang dilakukan oleh Java dan Mono.
Dan karena penjelasannya bisa sangat panjang,
menjadi PR saja bagi pembaca sekalian.
</p>

<p>
Mari kita lanjutkan.
</p>

<p>
Dua bulan setelah kejadian di atas.
Ternyata susah sekali membuat program ya.
Semuanya harus ditulis dengan detil, langkah demi langkah.
Apa tidak ada sesuatu cara yang lebih mudah?
Lho, emangnya bikin program apa sih.
Itu... tetangga mau dibuatkan program untuk memainkan file mp3.
Sudah 5000 baris program kok gak bisa juga :-(
Mengapa membuat program lagi untuk memainkan file mp3?
Kan sudah banyak, tinggal pakai. Ada xmms, mpg321, alsaplayer, dll.
Abis dia maksa sih. Pakai ngancam mau diputusin segala...
</p>

<p>
Sini duduk dulu.<br>
Daripada program untuk memainkan file mp3 itu ditulis semuanya,
sebagian kode programnya kan bisa pakai yang sudah dibuat orang lain.
Dalam program kita tinggal lakukan yang gampang2.
Misalnya begini :<br>
- Baca file mp3 dari harddisk<br>
- Proses file mp3 tsb dengan libmad<br>
- Bunyikan melalui alsa.<br>
Nah selesai kan?<br>
Lho libmad sama alsa itu?<br>
Silahkan tanya ke google.<br>
Singkatnya begini. Daripada melakukan proses decode yg rumit untuk file mp3,
sudah ada fungsi yang cukup bagus, misalnya yang disediakan oleh libmad.
Disitu dijelaskan bagaimana menggunakannya dalam program kita.
kemudian untuk mengeluarkan bunyi, kita pakai juga cara yang sudah disediakan alsa.
Menggunakan alsa, juga ada panduannya.
Lalu fungsi2 itu kita pakai dalam program kita, jadilah program untuk memainkan
file mp3. Ya toh?<br>
Ah, itu kan gampang-gampangan kata sampeyan aja.
</p>

<p>
Seminggu setelah itu.
</p>

<p>
Kang! Gawat.
Dia protes, masak program player mp3 itu tidak ada bagus2nya?
Untuk membunyikan file mp3 masak harus mengetik nama programnya dulu.
Apa tidak bisa yang klak-klik saja.
</p>

<p>
Ayo, sini duduk lagi.<br>
Dulu kan sudah diceritakan pakai libmad sama alsa.
Apa belum bisa juga?
Lho emang bisa pakai libmad dan alsa jadi ada klak-kliknya?
Ohooo, bukan. Sekarang kita cari juga fungsi yang menyediakan
tampilan grafis yg bagus, lalu kita pakai lagi dalam program itu.
Gitu lhooo.<br>
Tapi pakai apa?<br>
Nah itu gunanya google. Coba cari gtk, atau qt, atau fltk, atau fox toolkit.
Barang-barang itu menyediakan fungsi untuk tampilan yang asik di layar.
</p>

<p>
Tiga minggu berlalu.
</p>

<p>
Kang, capek semua jari2ku, mata pegel, pinggang linu.
Kenapa? ya itu, gara2 bikin program untuk mp3 player.
Masak semuanya diketik, dikompilasi, diperiksa, ketik lagi, periksa lagi.
</p>

<p>
Ya itu, akibat semuanya pakai gergaji doang.
Motong kayu pakai gergaji. Mau melobangi kayu, pakai gergaji.
Kayunya mau dipaku pakai gergaji.
Ya cari alat yang sesuai. Kan perlu palu, pahat, kuas, bor, handuk.
Handuk? untuk apa?<br>
Untuk ngelap keringat!
</p>

<p>
Mbok ya coba2 program seperti Kdevelop, Anjuta, Netbeans, Eclipse, Glade.
Jangan vi melulu.
</p>

<p>
Udah ah, takut ada yang tersinggung.
</p>

<!-- isi selesai -->

</body>
</html>
